# Generated by Django 4.1.3 on 2023-08-28 17:24

from django.db import migrations


def _create_fallback_game(apps, schema_editor):
    DailyChallenge = apps.get_model("chess", "DailyChallenge")
    challenge = DailyChallenge(
        id="fallback",
        fen="6k1/7p/1Q2P2p/4P3/qb2Nr2/1n3N1P/5PP1/5RK1 w - - 3 27",
        bot_first_move="f8f4",
        fen_before_bot_first_move="5rk1/7p/1Q2P2p/4P3/qb2N3/1n3N1P/5PP1/5RK1 b - - 2 26",
        piece_role_by_square={
            "g8": "k",
            "h7": "p1",
            "h6": "p2",
            "e6": "P1",
            "b6": "Q",
            "e5": "P2",
            "f4": "r1",
            "e4": "N1",
            "b4": "b1",
            "a4": "q",
            "h3": "P3",
            "f3": "N2",
            "b3": "n1",
            "g2": "P4",
            "f2": "P5",
            "g1": "K",
            "f1": "R1",
        },
        teams={
            "w": [
                {"role": "P1", "faction": "humans", "name": "Abdul Philippon"},
                {"role": "Q", "faction": "humans", "name": "Tetsuo Lebowsky"},
                {"role": "P2", "faction": "humans", "name": "John Devi"},
                {"role": "N1", "faction": "humans", "name": "Rae Kitano"},
                {"role": "P3", "faction": "humans", "name": "Joachim Nguyen"},
                {"role": "N2", "faction": "humans", "name": "Sydney Lion"},
                {"role": "P4", "faction": "humans", "name": "Kelly Wang"},
                {"role": "P5", "faction": "humans", "name": "Luis Hermosa"},
                {"role": "K", "faction": "humans", "name": "Roger Stevens"},
                {"role": "R1", "faction": "humans", "name": "Fab Force"},
            ],
            "b": [
                {"role": "k", "faction": "undeads"},
                {"role": "p1", "faction": "undeads"},
                {"role": "p2", "faction": "undeads"},
                {"role": "r1", "faction": "undeads"},
                {"role": "b1", "faction": "undeads"},
                {"role": "q", "faction": "undeads"},
                {"role": "n1", "faction": "undeads"},
            ],
        },
    )

    # In a migration context models are kinda emulated, so this "challenge" object
    # doesn't have its "clean" method: let's compute the `*_before_bot_first_move` fields manually:
    from apps.chess.business_logic import (
        compute_daily_challenge_before_bot_first_move_fields,
    )

    compute_daily_challenge_before_bot_first_move_fields(challenge)

    challenge.save()


def _revert(apps, schema_editor):
    DailyChallenge = apps.get_model("chess", "DailyChallenge")
    DailyChallenge.objects.filter(id="fallback").delete()


class Migration(migrations.Migration):

    dependencies = [
        ("chess", "0002_dailychallenge_piece_role_by_square_before_bot_first_move"),
    ]

    operations = [migrations.RunPython(_create_fallback_game, reverse_code=_revert)]
