# Generated by Django 5.0.2 on 2024-03-13 19:43

import datetime as dt

from django.db import migrations, models

_EXISTING_CHALLENGES_PARAMETERS = {
    # That's the hard-coded values we were using before this migration:
    "bot_depth": 3,
    "player_simulated_depth": 10,
    # Only games with a threshold date *before* this date,
    # and with a non-blank solution, will be updated:
    "threshold_date": dt.date(2024, 3, 16),
}


def _set_existing_challenges_with_solution_right_depths(apps, schema_editor):
    DailyChallenge = apps.get_model("daily_challenge", "DailyChallenge")

    lookup_key_threshold_date = _EXISTING_CHALLENGES_PARAMETERS[
        "threshold_date"
    ].strftime("%m-%d")
    challenges_to_update_qs = DailyChallenge.objects.exclude(solution="").filter(
        lookup_key__lt=lookup_key_threshold_date
    )
    # Let's do this!
    challenges_to_update_qs.update(
        bot_depth=_EXISTING_CHALLENGES_PARAMETERS["bot_depth"],
        player_simulated_depth=_EXISTING_CHALLENGES_PARAMETERS[
            "player_simulated_depth"
        ],
    )


class Migration(migrations.Migration):

    dependencies = [
        ("daily_challenge", "0010_dailychallengestats_see_solution_count"),
    ]

    operations = [
        migrations.AddField(
            model_name="dailychallenge",
            name="bot_depth",
            field=models.PositiveSmallIntegerField(
                default=1,
                help_text="The depth of the bot's search. 1 is a good value for an 'easy enough' daily challenge.",
            ),
        ),
        migrations.AddField(
            model_name="dailychallenge",
            name="player_simulated_depth",
            field=models.PositiveSmallIntegerField(
                default=5,
                help_text="The depth of the player's simulated search. 5 is a good value for modeling a 'casual' chess player (like myself ^_^).",
            ),
        ),
        migrations.RunPython(
            _set_existing_challenges_with_solution_right_depths,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
