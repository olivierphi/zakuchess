---
name: Test Suite

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  pull-requests: write
  
env:
  DJANGO_SETTINGS_MODULE: "project.settings.test"

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: "actions/checkout@v4"
      - name: "Install poetry"
        env:
          POETRY_VERSION: "1.6.0"
        run: pipx install poetry==${POETRY_VERSION}        
      - uses: "actions/setup-python@v4"
        with:
          python-version: "${{ matrix.python-version }}"
          cache: 'poetry' 
      - name: "Install dependencies via Poetry"
        run: poetry install
      - name: "Run linting checks: Black"
        run: poetry run black src/
      - name: "Run linting checks: Isort"
        run: poetry run isort --settings-file=pyproject.toml --check-only src/
      - name: "Run linting checks: Ruff"
        run: poetry run ruff check --quiet src/
      - name: "Run linting checks: Mypy"
        run: poetry run mypy src/
      - name: "Check that Django DB migrations are up to date"
        run: poetry run python src/manage.py makemigrations | grep "No changes detected"
      - name: "Run tests"
        env:
          PYTHONPATH: "src/"
        # TODO: progressively  increase minimum coverage to something closer to 80%
        run: poetry run pytest --cov=src --cov-report xml:coverage.xml
        # --cov-fail-under=60 --> we'll actually do that with the "Report coverage" step
      - name: "Report coverage"
        # @link https://github.com/orgoro/coverage
        uses: "orgoro/coverage@v3.1"
        continue-on-error: true
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          thresholdAll: 0.6
